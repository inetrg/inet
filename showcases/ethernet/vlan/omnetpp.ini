[General]
network = EthernetVlanShowcase2

**.fcsMode = "computed"
**.crcMode = "computed"

*.*.encap.typename = "OmittedEthernetEncapsulation"
*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.ieee8021q.typename = "Ieee8021qLayer"	# TODO only needed in switches
*.*.eth[*].bitrate = 100Mbps

*.host1.numApps = 1
*.host1.app[*].typename = "UdpBasicApp"
*.host1.app[*].destAddresses = "host2"
*.host1.app[*].destPort = 1000
*.host1.app[*].messageLength = 1000Byte
*.host1.app[*].sendInterval = 0.1s
*.host1.app[*].packetName = "UdpBasicAppData-upper"

*.host4.numApps = 1
*.host4.app[*].typename = "UdpBasicApp"
*.host4.app[*].destAddresses = "host5"
*.host4.app[*].destPort = 1000
*.host4.app[*].messageLength = 1000Byte
*.host4.app[*].sendInterval = 0.1s
*.host4.app[*].packetName = "UdpBasicAppData-lower"

*.host2.numApps = 1
*.host2.app[*].typename = "UdpSink"

*.host3.app[*].typename = "UdpSink"
*.host5.app[*].typename = "UdpSink"
*.host6.app[*].typename = "UdpSink"
*.host2.app[0].localPort = 1000
*.host3.app[0].localPort = 1000
*.host5.app[0].localPort = 1000
*.host6.app[0].localPort = 1000
# ?

*.*.numPcapRecorders = 1
*.host*.pcapRecorder[*].moduleNamePatterns = "eth[0]"
*.host1.pcapRecorder[*].pcapFile = "results/host1.pcap"
*.host2.pcapRecorder[*].pcapFile = "results/host2.pcap"
*.switch*.pcapRecorder[*].moduleNamePatterns = "eth[1]"
*.switch1.pcapRecorder[*].pcapFile = "results/switch1.pcap"
*.switch2.pcapRecorder[*].pcapFile = "results/switch2.pcap"

**.interfaceTableVisualizer.displayInterfaceTables = true
#**.interfaceTableVisualizer.placementHint = "top"
#**.interfaceTableVisualizer.displayWiredInterfacesAtConnections = false
#**.interfaceTableVisualizer.format = "%N\n\n"

[Config VLANBetweenSwitches]

*.switch*.policy.typename = "VlanPolicyLayer"

*.switch1.eth[2].protocol = "ieee8021qctag"
*.switch2.eth[0].protocol = "ieee8021qctag"

*.host1.app[*].destAddresses = "10.0.0.7"
*.host4.app[*].destAddresses = "10.0.1.7"

#*.configurator.dumpConfig = "config_orig.xml"
*.configurator.config = xmldoc("config.xml")

**.limitedBroadcast = true

#**.directBroadcastInterfaces = "eth0"

#**.arp.typename = "GlobalArp"

*.switch1.policy.inboundFilter.typename = "OmittedPacketFilter"
*.switch1.policy.inboundMapper.typename = "VlanIndMapper"
*.switch1.policy.inboundMapper.mappedVlanIds = {"eth0" : {"-1" : 1}, "eth1" : {"-1" : 2}}
*.switch1.policy.outboundFilter.typename = "VlanReqFilter"
*.switch1.policy.outboundFilter.acceptedVlanIds = {"eth2" : [1, 2]}
*.switch1.policy.outboundMapper.typename = "OmittedPacketFlow"

*.switch2.policy.inboundFilter.typename = "OmittedPacketFilter"
*.switch2.policy.*boundMapper.typename = "OmittedPacketFlow"
*.switch2.policy.outboundFilter.acceptedVlanIds = {"eth0" : [-1], "eth1" : [1], "eth2" : [1], "eth3" : [2], "eth4" : [2]}

#[Config w]
#extends = X
#
#*.host1.app[*].destAddresses = "10.0.0.2"

[Config VirtualInterfaces]

# TODO: vlan interfaces should be autoconfigured
*.configurator.config = xmldoc("config_virt.xml")
#*.configurator.dumpConfig = "config_virt_orig.xml"

*.host1.app[*].destAddresses = "host2%virt0"

*.host*.ieee8021q.hasSocketSupport = true
*.host{1..2}.numVirtInterfaces = 1
*.host*.virt[0].tunnel.realInterface = "eth0"
*.host*.virt[0].tunnel.protocol = "ieee8021qctag"
*.host*.virt[0].tunnel.vlanId = 1

#[Config BetweenVLANs]
#extends = VLANBetweenSwitches
#
#*.host1.app[*].destAddresses = "10.0.1.2"
#*.host4.app[*].destAddresses = "10.0.1.2"
#
#**.displayPacketDrops = true

#[Config ReturnDirection]
#extends = BetweenVLANs
#
#*.switch2.policy.inboundMapper.typename = "VlanIndMapper"
#*.switch2.policy.inboundMapper.mappedVlanIds = {"eth1" : {"-1" : 1}, "eth2" : {"-1" : 1}, "eth3" : {"-1" : 2}, "eth4" : {"-1" : 2}}
#*.switch1.policy.outboundFilter.typename = "VlanReqFilter"
#*.switch1.policy.outboundFilter.acceptedVlanIds = {"eth2" : [1, 2], "eth0" : [1], "eth1" : [2]}

#[Config SameAddresses]
#extends = VLANBetweenSwitches
#
#*.host1.app[*].destAddresses = "10.0.0.7"
#*.host4.app[*].destAddresses = "10.0.1.7"
#
##*.configurator.dumpConfig = "config_orig.xml"
#*.configurator.config = xmldoc("config_sameaddresses.xml")
