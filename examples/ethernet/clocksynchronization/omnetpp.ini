[General]
network = ClockSynchronizationExampleNetwork
description = "Using periodic gating mechanism with or without local clocks and clock synchronization"
# record-eventlog = true

# disable legacy Ethernet
*.*.ethernet.typename = "EthernetLayer"

# avoid ARP
*.*.ipv4.arp.typename = "GlobalArp"
*.switch1.macTable.addressTable = [{address: "switch2", interface: "eth0"}, \
                                   {address: "sink1", interface: "eth0"}, \
                                   {address: "sink2", interface: "eth0"}]

*.switch2.macTable.addressTable = [{address: "switch1", interface: "eth0"}, \
                                   {address: "sink1", interface: "eth1"}, \
                                   {address: "sink2", interface: "eth2"}]

# source applications
*.source*.numApps = 1
*.source*.app[*].typename = "UdpApp"
*.source*.app[0].source.packetLength = 1kB
*.source*.app[0].source.productionInterval = 20us
*.source*.app[0].io.destPort = 1000

*.source1.app[0].io.destAddress = "sink1"
*.source1.app[0].source.packetNameFormat = "source1-%c"

*.source2.app[0].io.destAddress = "sink2"
*.source2.app[0].source.initialProductionOffset = 10us
*.source2.app[0].source.packetNameFormat = "source2-%c"

# sink applications
*.sink*.numApps = 1
*.sink*.app[*].typename = "UdpSink"
*.sink*.app[0].localPort = 1000

# Ethernet interface and queueing
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth[*].bitrate = 1Gbps
*.switch1.eth[0].macLayer.queue.typename = "GatingPriorityQueue"
*.switch1.eth[0].macLayer.queue.numQueues = 2
*.switch1.eth[0].macLayer.queue.classifier.typename = "ContentBasedClassifier"
*.switch1.eth[0].macLayer.queue.classifier.packetFilters = "source1*;source2*"
*.switch1.eth[0].macLayer.queue.classifier.packetDataFilters = "*;*"
*.switch1.eth[0].macLayer.queue.queue[*].typename = "DropTailQueue"
*.switch1.eth[0].macLayer.queue.gate[*].initiallyOpen = false
*.switch1.eth[0].macLayer.queue.gate[*].durations = [10us, 10us]
*.switch1.eth[0].macLayer.queue.gate[1].offset = 10us

[Config SynchronizedBySimulationTime]
description = "Synchronized by simulation time"

[Config UnsynchronizedClocks]
description = "Unsynchronized local clocks"

*.source*.clock.typename = "OscillatorBasedClock"
*.source*.clock.oscillator.typename = "ConstantDriftOscillator"
*.source1.clock.oscillator.driftRate = 500ppm
*.source2.clock.oscillator.driftRate = -400ppm
*.source*.app[0].source.clockModule = "^.^.clock"

*.switch1.clock.typename = "OscillatorBasedClock"
*.switch1.clock.oscillator.typename = "ConstantDriftOscillator"
*.switch1.clock.oscillator.driftRate = 300ppm
*.switch1.eth[0].macLayer.queue.gate[*].clockModule = "^.^.^.^.clock"

[Config SynchronizedClocks]
description = "Synchronized local clocks using a simplified synhronization"
extends = UnsynchronizedClocks

*.source*.clock.typename = "SettableClock"
*.source*.clock.defaultOverdueClockEventHandlingMode = "execute"

*.source*.numApps = 2
*.source*.app[1].typename = "SimpleClockSynchronizer"
*.source*.app[1].masterClockModule = "^.^.switch1.clock"
*.source*.app[1].slaveClockModule = "^.clock"
*.source*.app[1].synchronizationInterval = 10us
*.source*.app[1].synchronizationAccuracy = uniform(0ns, 100ns)

[Config SynchronizedClocksByGPTP]
description = "Synchronized local clocks using gPTP"

*.switch*.hasGptp = true

*.switch*.gptp.syncInterval = 10us
*.switch*.gptp.pdelayInterval = 1ms

*.switch*.clock.typename = "SettableClock"
*.switch1.clock.oscillator.driftRate = 300ppm

*.switch1.gptp.gptpNodeType = "MASTER_NODE"
*.switch1.gptp.masterPorts = ["eth0", "eth1", "eth2"]  # eth*

*.switch2.gptp.gptpNodeType = "SLAVE_NODE"
*.switch2.gptp.slavePort = "eth0"

*.source*.clock.typename = "SettableClock"

*.source*.numApps = 2
*.source*.app[1].typename = "Gptp"
*.source*.app[1].gptpNodeType = "SLAVE_NODE"
*.source*.app[1].slavePort = "eth0"
*.source*.app[1].syncInterval = 10us
*.source*.app[1].pdelayInterval = 1ms

